#
# Copyright (c) 2022-2024 SMALLPROGRAM <https://github.com/smallprogram/OpenWrtAction>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# Description: Build OpenWrt using GitHub Actions
#

name: TEST

on:
  repository_dispatch:
    types: [openwrt_source_update]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      is_display_detailed:
        description: 'Whether to display detailed information about compilation'
        required: false
        default: 'false'
      is_single_threaded:
        description: 'Whether single-threaded compilation'
        required: false
        default: 'false'
  # schedule:
  #   - cron: 0 */8 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds_config/lean.feeds.conf.default
  CONFIGS: config/leanlede_config
  DIY_P1_SH: diy_script/lean_diy/diy-part1.sh
  DIY_P2_SH: diy_script/lean_diy/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_ARTIFACT: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  job_init: 
    runs-on: ubuntu-latest
    name: Build-Init
    outputs:
      output_release_tag: ${{ steps.gen_release_tag.outputs.release_tag }}
      output_sha: ${{steps.commit.outputs.commit_hash }}
    steps:
      - name: Generate Tag Name
        id: gen_release_tag
        run: |
          echo 'release_tag=multi-platform_$(date +'%Y.%m.%d_%H.%M.%S')' >> $GITHUB_OUTPUT
          sudo timedatectl set-timezone 'Asia/Shanghai'
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          cd /workdir
          sudo mkdir -p output
          sudo chown $USER:$GROUPS /workdir/output
          ln -sf /workdir/output $GITHUB_WORKSPACE/output

      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Clone Source Code
        working-directory: /workdir
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: SSH connection to Actions
        uses: mxschmitt/action-tmate@v3.16
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

      - name: Generate Release Tag
        id: tag
        run: |
          kernel_X86=$(grep -oP 'KERNEL_PATCHVER:=\K[^ ]+' $GITHUB_WORKSPACE/openwrt/target/linux/x86/Makefile)
          kernel_X86_version=$(sed -n '2p' $GITHUB_WORKSPACE/openwrt/include/kernel-${kernel_X86} | awk -F '-' '{print $2}' | awk -F ' =' '{print $1}')
          kernel_rockchip=$(grep -oP 'KERNEL_PATCHVER:=\K[^ ]+' $GITHUB_WORKSPACE/openwrt/target/linux/rockchip/Makefile)
          kernel_rockchip_version=$(sed -n '2p' $GITHUB_WORKSPACE/openwrt/include/kernel-${kernel_rockchip} | awk -F '-' '{print $2}' | awk -F ' =' '{print $1}')
          kernel_bcm27xx=$(grep -oP 'KERNEL_PATCHVER:=\K[^ ]+' $GITHUB_WORKSPACE/openwrt/target/linux/bcm27xx/Makefile)
          kernel_bcm27xx_version=$(sed -n '2p' $GITHUB_WORKSPACE/openwrt/include/kernel-${kernel_bcm27xx} | awk -F '-' '{print $2}' | awk -F ' =' '{print $1}')
          openwrt_version=$(grep -o "DISTRIB_REVISION='[^']*'" $GITHUB_WORKSPACE/openwrt/package/lean/default-settings/files/zzz-default-settings | sed "s/DISTRIB_REVISION='\([^']*\)'/\1/")

          
          line001="![](https://img.shields.io/github/downloads/smallprogram/OpenWrtAction/${{ steps.gen_release_tag.outputs.release_tag }}/total?style=flat-square)" 
          line002="### Firmware Information" 
          line003="**:loudspeaker:Cancel the ext4 format and only keep the squashfs format.**" 
          line004="**:computer:Including traditional IMG format firmware and UEFI boot firmware.**" 
          line005="**:cd:Including qcow2 format firmware and UEFI boot firmware supporting pve virtual machine.**" 
          line006="**:cd:Including vdi format firmware and UEFI boot firmware supporting Visual Box virtual machine.**" 
          line007="**:cd:Including vhdx format firmware and UEFI boot firmware supporting Hyper-v virtual machines.**" 
          line008="**:dvd:Including vmdk format firmware and UEFI boot firmware that support ESXi virtual machines (8.0 requires tool conversion).**" 
          line009="### Openwrt Information" 
          line010="**:minidisc: OpenWrt Version: $openwrt_version**" 
          # line011="**:gear: Default-Setting Version: $PKG_VERSION.$PKG_RELEASE**" 
          line012="### Compile Information" 
          line013="platform|kernel|compile status" 
          line014="-|-|-" 
          line015="**:ice_cube: X86**|**$kernel_X86_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line016="**:ice_cube: R5S**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line017="**:ice_cube: R5C**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line018="**:ice_cube: R4S**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line019="**:ice_cube: R4SE**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line020="**:ice_cube: R2S**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line021="**:ice_cube: R2C**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line022="**:ice_cube: H66K**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line023="**:ice_cube: H68K**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line024="**:ice_cube: H69K**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line025="**:ice_cube: R66S**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line026="**:ice_cube: R68S**|**$kernel_rockchip_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line027="**:ice_cube: R_Pi_3b**|**$kernel_bcm27xx_version**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)" 
          line028="**:ice_cube: R_Pi_4b**|**$kernel_bcm27xx_version')**|![](https://img.shields.io/badge/build-in_progress_or_waiting.....-yellow?logo=githubactions&logoColor=yellow&style=flat-square)"

          echo $line001 >> release.txt
          echo $line002 >> release.txt
          echo $line003 >> release.txt
          echo $line004 >> release.txt
          echo $line005 >> release.txt
          echo $line006 >> release.txt
          echo $line007 >> release.txt
          echo $line008 >> release.txt
          echo $line009 >> release.txt
          echo $line010 >> release.txt
          # echo $line011 >> release.txt
          echo $line012 >> release.txt 
          echo $line013 >> release.txt
          echo $line014 >> release.txt
          echo $line015 >> release.txt
          echo $line016 >> release.txt
          echo $line017 >> release.txt
          echo $line018 >> release.txt
          echo $line019 >> release.txt
          echo $line020 >> release.txt
          echo $line021 >> release.txt
          echo $line022 >> release.txt
          echo $line023 >> release.txt
          echo $line024 >> release.txt
          echo $line025 >> release.txt
          echo $line026 >> release.txt
          echo $line027 >> release.txt
          echo $line028 >> release.txt
          touch release.txt
          echo 'status=success' >> $GITHUB_OUTPUT